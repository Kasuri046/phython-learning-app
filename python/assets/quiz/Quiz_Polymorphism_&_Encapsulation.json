{
    "title": "Quiz: Polymorphism & Encapsulation",
    "questions": [
      {
        "question": "What is polymorphism in C++?",
        "options": [
          "The ability to take many forms",
          "The ability to create multiple classes",
          "The ability to overload functions",
          "None of the above"
        ],
        "correctAnswer": "The ability to take many forms"
      },
      {
        "question": "What are the two types of polymorphism?",
        "options": [
          "Compile-time and run-time",
          "Static and dynamic",
          "Overloading and overriding",
          "Both A and B"
        ],
        "correctAnswer": "Both A and B"
      },
      {
        "question": "What is function overloading?",
        "options": [
          "Defining multiple functions with the same name but different parameters",
          "Defining a function in a derived class",
          "Changing the return type of a function",
          "None of the above"
        ],
        "correctAnswer": "Defining multiple functions with the same name but different parameters"
      },
      {
        "question": "What is function overriding?",
        "options": [
          "Redefining a base class function in a derived class",
          "Defining a function in a base class",
          "Changing the access specifier of a function",
          "None of the above"
        ],
        "correctAnswer": "Redefining a base class function in a derived class"
      },
      {
        "question": "What is encapsulation?",
        "options": [
          "Bundling data and methods that operate on that data within a single unit",
          "Creating multiple classes",
          "The ability to take many forms",
          "None of the above"
        ],
        "correctAnswer": "Bundling data and methods that operate on that data within a single unit"
      },
      {
        "question": "What is the purpose of access specifiers?",
        "options": [
          "To control access to class members",
          "To define constructors and destructors",
          "To overload functions",
          "None of the above"
        ],
        "correctAnswer": "To control access to class members"
      },
      {
        "question": "What are the three access specifiers in C++?",
        "options": [
          "public, protected, private",
          "public, default, private",
          "protected, private, static",
          "None of the above"
        ],
        "correctAnswer": "public, protected, private"
      },
      {
        "question": "What is an example of polymorphism in C++?",
        "options": [
          "Overloading a function",
          "Using a base class pointer to refer to a derived class object",
          "Both A and B",
          "None of the above"
        ],
        "correctAnswer": "Both A and B"
      },
      {
        "question": "Can you achieve encapsulation without using classes?",
        "options": [
          "No",
          "Yes, using structures",
          "Yes, using functions",
          "Both B and C"
        ],
        "correctAnswer": "Both B and C"
      },
      {
        "question": "What is the benefit of using encapsulation?",
        "options": [
          "Improves code modularity and maintainability",
          "Reduces code duplication",
          "Enhances performance",
          "None of the above"
        ],
        "correctAnswer": "Improves code modularity and maintainability"
      }
    ]
  }