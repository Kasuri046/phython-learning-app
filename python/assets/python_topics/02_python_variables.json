{
  "topic": "variables",
  "sections": [
    {
      "heading": "Variables",
      "description": "Variables are containers for storing data values.",
      "code_blocks": []
    },
    {
      "heading": "Creating Variables",
      "description": "Python has no command for declaring a variable. A variable is created the moment you first assign a value to it. Variables do not need to be declared with any particular type, and can even change type after they have been set.",
      "code_blocks": [
        {
          "example_title": "Example",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "x = 5\n\ny = \"John\"\n\nprint(x)\n\nprint(y)"
        },
        {
          "example_title": "Example",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "x = 4       # x is of type int\n\nx = \"Sally\" # x is now of type str\n\nprint(x)"
        }
      ]
    },
    {
      "heading": "Casting",
      "description": "If you want to specify the data type of a variable, this can be done with casting.",
      "code_blocks": [
        {
          "example_title": "Example",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "x =\n\u00bb\u00bbstr(3)    # x will be '3'\ny = int(3)    # y\n\u00bb\u00bbwill be 3\nz = float(3)  # z will be 3.0"
        }
      ]
    },
    {
      "heading": "Get the Type",
      "description": "You can get the data type of a variable with the type() function.",
      "code_blocks": [
        {
          "example_title": "Example",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "x = 5\ny = \"John\"\nprint(type(x))\nprint(type(y))"
        }
      ]
    },
    {
      "heading": "Single or Double Quotes?",
      "description": "String variables can be declared either by using single or double quotes:",
      "code_blocks": [
        {
          "example_title": "Example",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "x = \"John\"\n# is the same as\nx =\n\u00bb\u00bb'John'"
        }
      ]
    },
    {
      "heading": "Case-Sensitive",
      "description": "Variable names are case-sensitive.",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "This will create two variables:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "a = 4\nA =\n\u00bb\u00bb\"Sally\"\n#A will not overwrite a"
        }
      ]
    }
  ]
}