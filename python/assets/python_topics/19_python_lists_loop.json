{
  "topic": "lists loop",
  "sections": [
    {
      "heading": "Loop Through a List",
      "description": "You can loop through the list items by using a for loop: Learn more about for loops in our Python For Loops Chapter.",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Print all items in the list, one by one:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thislist = [\"apple\", \"banana\", \"cherry\"]\n\n\u00bb\u00bbfor x in thislist:\n\u00bb\u00bbprint(x)"
        }
      ]
    },
    {
      "heading": "Loop Through the Index Numbers",
      "description": "You can also loop through the list items by referring to their index number. Use the range() and len() functions to create a suitable iterable. The iterable created in the example above is [0, 1, 2].",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Print all items by referring to their index number:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thislist = [\"apple\", \"banana\", \"cherry\"]\nfor i\n\u00bb\u00bbin range(len(thislist)):\n\n\nprint(thislist[i])"
        }
      ]
    },
    {
      "heading": "Using a While Loop",
      "description": "You can loop through the list items by using a while loop. Use the len() function to determine the length of the list, then start at 0 and loop your way through the list items by referring to their indexes. Remember to increase the index by 1 after each iteration. Learn more about while loops in our Python While Loops Chapter.",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Print all items, using a while loop to go \n  through all the index numbers",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thislist = [\"apple\", \"banana\", \"cherry\"]\ni = 0\n\n\u00bb\u00bbwhile i < len(thislist):\n\n\nprint(thislist[i])\n\u00bb\u00bbi = i + 1"
        }
      ]
    },
    {
      "heading": "Looping Using List Comprehension",
      "description": "List Comprehension offers the shortest syntax for looping through lists: Learn more about list comprehension in the next chapter: List Comprehension.",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "A short hand for loop that will print all items in a list:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thislist = [\"apple\", \"banana\", \"cherry\"]\n[print(x) for x in thislist]"
        }
      ]
    }
  ]
}