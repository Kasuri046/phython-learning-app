{
  "topic": "dictionaries",
  "sections": [
    {
      "heading": "Dictionary",
      "description": "Dictionaries are used to store data values in key:value pairs. A dictionary is a collection which is ordered*, changeable and do not allow duplicates. Dictionaries are written with curly brackets, and have keys and values:",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Create and print a dictionary:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thisdict =\t{\n\n\u00bb\u00bb\"brand\": \"Ford\",\n\n\u00bb\u00bb\"model\": \"Mustang\",\n\n\u00bb\u00bb\"year\": 1964\n\n}\n\nprint(thisdict)"
        }
      ]
    },
    {
      "heading": "Dictionary Items",
      "description": "Dictionary items are ordered, changeable, and do not allow duplicates. Dictionary items are presented in key:value pairs, and can be referred to by using the key name.",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Print the \"brand\" value of the dictionary:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thisdict =\t{\n\n\u00bb\u00bb\"brand\": \"Ford\",\n\n\u00bb\u00bb\"model\": \"Mustang\",\n\n\u00bb\u00bb\"year\": 1964\n\n}\n\nprint(thisdict[\"brand\"])"
        }
      ]
    },
    {
      "heading": "Ordered or Unordered?",
      "description": "When we say that dictionaries are ordered, it means that the items have a defined order, and that order will not change. Unordered means that the items do not have a defined order, you cannot refer to an item by using an index.",
      "code_blocks": []
    },
    {
      "heading": "Changeable",
      "description": "Dictionaries are changeable, meaning that we can change, add or remove items after the dictionary has been created.",
      "code_blocks": []
    },
    {
      "heading": "Duplicates Not Allowed",
      "description": "Dictionaries cannot have two items with the same key:",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Duplicate values will overwrite existing values:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thisdict =\t{\n\n\u00bb\u00bb\"brand\": \"Ford\",\n\n\u00bb\u00bb\"model\": \"Mustang\",\n\n\u00bb\u00bb\"year\": 1964,\n\u00bb\u00bb\"year\": 2020\n\n}\n\nprint(thisdict)"
        }
      ]
    },
    {
      "heading": "Dictionary Length",
      "description": "To determine how many items a dictionary has, use the len() function:",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Print the number of items in the dictionary:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "print(len(thisdict))"
        }
      ]
    },
    {
      "heading": "Dictionary Items - Data Types",
      "description": "The values in dictionary items can be of any data type:",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "String, int, boolean, and list data types:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thisdict =\t{\n\n\u00bb\u00bb\"brand\": \"Ford\",\n\n\u00bb\u00bb\"electric\": False,\n\n\u00bb\u00bb\"year\": 1964,\n\u00bb\u00bb\"colors\": [\"red\", \"white\", \"blue\"]\n\n}"
        }
      ]
    },
    {
      "heading": "type()",
      "description": "From Python's perspective, dictionaries are defined as objects with the data type 'dict':",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Print the data type of a dictionary:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thisdict =\t{\n\n\u00bb\u00bb\"brand\": \"Ford\",\n\n\u00bb\u00bb\"model\": \"Mustang\",\n\n\u00bb\u00bb\"year\": 1964\n\n}\n\nprint(type(thisdict))"
        }
      ]
    },
    {
      "heading": "The dict() Constructor",
      "description": "It is also possible to use the dict() constructor to make a dictionary.",
      "code_blocks": [
        {
          "example_title": "Example",
          "notes": "Using the dict() method to make a dictionary:",
          "raw_html_class": "w3-code notranslate pythonHigh",
          "code": "thisdict =\n\u00bb\u00bbdict(name = \"John\", age = 36, country = \"Norway\")\n\nprint(thisdict)"
        }
      ]
    },
    {
      "heading": "Python Collections (Arrays)",
      "description": "There are four collection data types in the Python programming language: When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.",
      "code_blocks": []
    }
  ]
}