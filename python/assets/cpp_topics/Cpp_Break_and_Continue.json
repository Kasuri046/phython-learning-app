{
  "title": "C++ Break and Continue",
  "content": [
    {
      "heading": "C++ Break",
      "paragraphs": [
        "You have already seen the break statement used in an earlier chapter of this tutorial. It was used to \"jump out\" of a switch statement.",
        "The break statement can also be used to jump out of a \nloop.",
        "This example jumps out of the loop when i is equal to 4:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "for (int i = 0 ; i < 10 ; i++) {\n  if (i == 4) {\n  break ;\n  }  \ncout << i << \"\\n\" ;\n}"
      ]
    },
    {
      "heading": "C++ Continue",
      "paragraphs": [
        "The continue statement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.",
        "This example skips the value of 4:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "for (int i = 0 ; i < 10 ; i++) {\n  if (i == 4) { \n  continue ;\n  } \n cout << i << \"\\n\" ;\n}"
      ]
    },
    {
      "heading": "Break and Continue in While Loop",
      "paragraphs": [
        "You can also use break and continue in while loops:"
      ]
    },
    {
      "heading": "Break Example",
      "paragraphs": [
        "int i = 0 ;\nwhile (i < 10) {  \ncout << i << \"\\n\" ;\n  i++ ;\\n    if (i == 4) {    \nbreak ;\n  \n  }}"
      ]
    },
    {
      "heading": "Continue Example",
      "paragraphs": [
        "int i = 0 ;\nwhile (i < 10) {  \nif (i == 4) {   \n i++ ;\n    continue ;\n    }  cout << i << \"\\n\" ;\n  i++ ;\n}"
      ]
    }
  ]
}