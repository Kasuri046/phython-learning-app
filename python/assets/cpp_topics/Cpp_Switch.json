{
  "title": "C++ Switch",
  "content": [
    {
      "heading": "C++ Switch Statements",
      "paragraphs": [
        "Use the switch statement to select one of many code blocks to be executed.",
        "This is how it works:",
        "The switch expression is evaluated once\nThe value of the expression is compared with the values of each case\nIf there is a match, the associated block of code is executed\nThe break and default keywords are optional, and will be described later in this chapter",
        "The example below uses the weekday number to calculate the weekday name:"
      ]
    },
    {
      "heading": "Syntax",
      "paragraphs": [
        "switch(expression) {\n  case x:    // code block\n    break;\n  case y:\n    // code block\n    break;\n  default:\n    // code block\n}"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "int day = 4;\nswitch (day) {\n  case 1:\n    cout << \"Monday\";\n    break;\n  case 2:\n    cout << \"Tuesday\";\n    break;\n  case 3:\n    cout << \"Wednesday\";\n    break;\n  case 4:\n    cout << \"Thursday\";\n    break;\n  case 5:\n    cout << \"Friday\";\n    break;\n  case 6:\n    cout << \"Saturday\";\n    break;\n  case 7:\n    cout << \"Sunday\";\n    break;\n}\n// Outputs \"Thursday\" (day 4)"
      ]
    },
    {
      "heading": "The break Keyword",
      "paragraphs": [
        "When C++ reaches a break \nkeyword, it breaks out of the switch block.",
        "This will stop the execution of more code and case testing inside \nthe block.",
        "When a match is found, and the job is done, it's time for a break. There is no need for more testing."
      ]
    },
    {
      "heading": "The default Keyword",
      "paragraphs": [
        "The default keyword specifies some code to run if there is no \ncase match:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "int day = 4;\nswitch (day) {\n  case 6:\n    cout << \"Today is Saturday\";\n    break;\n  case 7:\n    cout << \"Today is Sunday\";\n    break;\n  default:\n    cout << \"Looking forward to the Weekend\";\n}\n// Outputs \"Looking forward to the Weekend\""
      ]
    }
  ]
}