{
  "title": "C++ Functions",
  "content": [
    {
      "heading": "C++ Functions",
      "paragraphs": [
        "A function is a block of code which only runs when it is called.",
        "You can pass data, known as parameters, into a function.",
        "Functions are used to perform certain actions, and they are important for reusing code: Define the code once, and use it many times."
      ]
    },
    {
      "heading": "Create a Function",
      "paragraphs": [
        "C++ provides some pre-defined functions, such as main(), which is used to execute code. But you can also create your own functions to perform certain actions.",
        "To create (often referred to as declare) a function, specify the name of the function, followed by parentheses ():",
        "myFunction() is the name of the function. void means that the function does not have a return value. You will learn more about return values later in the next chapter. Inside the function (the body), add code that defines what the function should do."
      ]
    },
    {
      "heading": "Syntax",
      "paragraphs": [
        "void myFunction() {\n    // code to be executed\n}"
      ]
    },
    {
      "heading": "Call a Function",
      "paragraphs": [
        "Declared functions are not executed immediately. They are \"saved for later use\", and will be executed later, when they are called.",
        "To call a function, write the function's name followed by two parentheses () and a semicolon ;",
        "In the following example, myFunction() is used to print a text (the action), when it is called:",
        "A function can be called multiple times:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "Inside main, call myFunction():",
        "// Create a function\nvoid myFunction() {\n    cout << \"I just got executed!\";\n}\n\nint main() {\n    myFunction();  // call the function\n    return 0;\n}\n// Outputs: \"I just got executed!\""
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "void myFunction() {\n    cout << \"I just got executed!\\n\";\n}\n\nint main() {\n    myFunction();\n    myFunction();\n    myFunction();\n    return 0;\n}\n// Outputs:\n// I just got executed!\n// I just got executed!\n// I just got executed!"
      ]
    },
    {
      "heading": "Function Declaration and Definition",
      "paragraphs": [
        "A C++ function consists of two parts:",
        "Declaration: the return type, the name of the function, and parameters (if any)",
        "Definition: the body of the function (code to be executed)",
        "Note: If a user-defined function, such as myFunction() is declared after the main() function, an error will occur.",
        "However, it is possible to separate the declaration and the definition of the function - for code optimization.",
        "You will often see C++ programs that have function declaration above main(), and function definition below main(). This will make the code better organized and easier to read:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "int main() {\n    myFunction();\n    return 0;\n}\n\nvoid myFunction() {\n    cout << \"I just got executed!\";\n}\n// Error"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "// Function declaration\nvoid myFunction();\n\n// The main method\nint main() {\n    myFunction();  // call the function\n    return 0;\n}\n\n// Function definition\nvoid myFunction() {\n    cout << \"I just got executed!\";\n}"
      ]
    }
  ]
}