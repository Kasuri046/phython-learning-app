{
  "title": "C++ cstring Library",
  "content": [
    {
      "heading": "C++ cstring Functions",
      "paragraphs": [
        "The <cstring> library has many functions that allow you to perform tasks on arrays and C-style strings.",
        "Note that C-style strings are different than regular strings. A C-style string is an array of characters, created with the char type. These strings are null-terminated, meaning they end with a special character '\\0' to indicate the end of the string.",
        "Common operations you can perform with C-style strings include copying, concatenation, comparison, and finding the length of strings.",
        "To learn more about C-style strings, read our C Strings Tutorial.",
        "A list of all cstring functions can be found in the table below.",
        "Using the functions in the <cstring> library helps ensure that your string manipulations are efficient and safe."
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "Here is a simple example demonstrating how to use the strcpy and strlen functions from the <cstring> library:\n\n#include <iostream>\n#include <cstring>\n\nint main() {\n    char source[] = \"Hello, World!\";\n    char destination[50];\n\n    strcpy(destination, source); // Copying the string\n    std::cout << \"Copied String: \" << destination << std::endl;\n    std::cout << \"Length of the string: \" << strlen(destination) << std::endl;\n\n    return 0;\n}"
      ]
    }
  ]
}