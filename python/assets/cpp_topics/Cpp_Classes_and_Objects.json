{
  "title": "C++ Classes and Objects",
  "content": [
    {
      "heading": "C++ Classes/Objects",
      "paragraphs": [
        "C++ is an object-oriented programming language.",
        "Everything in C++ is associated with classes and objects, along with its attributes and \nmethods. For example: in real life, a car is an object. The car has attributes, such as weight and color, and \nmethods, such as drive and brake.",
        "Attributes and methods are basically variables and \nfunctions that belongs to the class. These are often referred to as \n\"class members\".",
        "A class is a user-defined data type that we can use in our program, and it \nworks as an object constructor, or a \"blueprint\" for creating objects."
      ]
    },
    {
      "heading": "Create a Class",
      "paragraphs": [
        "To create a class, use the class keyword:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "Create a class called \"MyClass\":",
        "class MyClass {\n// The class  \npublic:\n  // Access specifier   \n int myNum ;\n //Attribute (int variable)\n string myString ;\n  //Attribute (string variable)\n} ;\n"
      ]
    },
    {
      "heading": "Explanation",
      "paragraphs": [
        "The class keyword is used to create a class called MyClass.\nThe public keyword is an access specifier, which specifies that members (attributes and methods) of the class are accessible from outside the class. You will learn more about access specifiers later.\nInside the class, there is an integer variable \nmyNum and a string variable myString. When variables are declared \nwithin a class, they are called attributes.\nAt last, end the class definition with a semicolon  ;\n."
      ]
    },
    {
      "heading": "Create an Object",
      "paragraphs": [
        "In C++, an object is created from a class. We have already created the class named MyClass, \nso now we can use this to create objects.",
        "To create an object of MyClass, specify the \nclass name, followed by the object name.",
        "To access the class attributes (myNum and myString), use the dot syntax (.) \non the object:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "Create an object called \"myObj\" and access \nthe attributes:",
        "class MyClass {\n // The class  \npublic: \n  // Access specifier    \nint myNum ;\n //Attribute (int variable)   \n string myString ;\n  //Attribute (string variable)\n} ;\nint main() { \n MyClass myObj ; \n  // Create an object of MyClass\n // Access attributes and set values  \nmyObj.myNum = 15 ;\n   \n  myObj.myString = \"Some text\" ;\n  // Print attribute values  \n  cout << myObj.myNum << \"\\n\" ;\n  cout << myObj.myString ;\n  return 0 ;\n}"
      ]
    },
    {
      "heading": "Multiple Objects",
      "paragraphs": [
        "You can create multiple objects of one class:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "// Create a Car class with some attributes\nclass Car {  \npublic:\n string brand ;\n       string model ;\n    int year ;\n} ;\nint main() {  // Create an object of Car \n Car carObj1 ;\n  carObj1.brand = \"BMW\" ;\n  \n  carObj1.model = \"X5\" ;\n  carObj1.year = 1999 ;\n  \n  // Create another object of Car\n Car carObj2 ;\n  carObj2.brand = \"Ford\" ;\n  carObj2.model = \"Mustang\" ;\n  carObj2.year = 1969 ;\n  // Print attribute values \n cout << carObj1.brand \n  << \" \" << carObj1.model << \" \" \n << carObj1.year << \"\\n\" ;\ncout << \n  carObj2.brand << \" \" << carObj2.model \n<< \" \" << carObj2.year << \"\\n\" ;\n return 0 ;\n}"
      ]
    }
  ]
}