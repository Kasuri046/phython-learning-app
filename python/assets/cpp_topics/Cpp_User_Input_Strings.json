{
  "title": "C++ User Input Strings",
  "content": [
    {
      "heading": "User Input Strings",
      "paragraphs": [
        "It is possible to use the extraction operator >> on cin to \nstore a string entered by a user:",
        "However, cin considers a space (whitespace, tabs, etc.) as a terminating \ncharacter, which means that it can only store a single word (even if you type \nmany words):",
        "From the example above, you would expect the program to print \"John Doe\", but it only prints \"John\". That's why, when working with strings, we often use the getline() \nfunction to read a line of text. It takes cin as the first parameter, and the string \nvariable as the second:"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "string firstName;\ncout << \"Type your first name: \";\ncin >> firstName;  // get user input from the keyboard\ncout << \"Your name is: \" << firstName;\n// Type your first name: John\n// Your name is: John"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "string fullName;\ncout << \"Type your full name: \";\ncin >> fullName;\ncout << \"Your name is: \" << fullName;\n// Type your full name: John Doe\n// Your name is: John"
      ]
    },
    {
      "heading": "Example",
      "paragraphs": [
        "string fullName;\ncout << \"Type your full name: \";\ngetline(cin, fullName);\ncout << \"Your name is: \" << fullName;\n// Type your full name: John Doe\n// Your name is: John Doe"
      ]
    }
  ]
}